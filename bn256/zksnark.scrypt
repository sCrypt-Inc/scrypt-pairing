import "bn256.scrypt";
import "bn256pairing.scrypt";


struct VerifyingKey {
    G1Point alpha;
    G2Point beta;
    G2Point gamma;
    G2Point delta;
    G1Point[2] gamma_abc;   // N + 1
}

struct Proof {
    G1Point a;
    G2Point b;
    G1Point c;
}

library ZKSNARK {

    // Number of inputs.
    static const int N = 1;
    static const int N_1 = N + 1;

    static function verify(int[N] inputs, Proof proof, VerifyingKey vk) : bool {
        

        G1Point vk_x = vk.gamma_abc[0];

        loop (N) : i {
            G1Point p = BN256.mulG1Point(
                vk.gamma_abc[i + 1],
                inputs[i]
            );
            vk_x = BN256.addG1Points(vk_x, p);
        }

        return BN256Pairing.pairCheckP4(
                {proof.a.x, -proof.a.y}, proof.b,
                vk.alpha, vk.beta,
                vk_x, vk.gamma,
                proof.c, vk.delta);
    }

}
